#物品数据
.s_ItemData
{
    itemId 0 : integer     	#物品ID                 
    itemNum 1 : integer    	#物品数量
	bindNum 2 : integer   	#绑定物品的数量
	param 3 : integer #获得时间
}

#Tag资源
.s_TagRes{
	id 0 : integer			# tag类型
	value 1 : integer   	# 最新的数值 
}

#装备信息
.s_EquipData
{
	equipPos 0 : integer		#装备位
	isEquipOn 1 : integer 		#是否穿上	
	strengthLv 2 : integer		#强化等级
	colorGrade 3 : integer		#颜色品质
	luckyValue 4 : integer    	#进阶点数
	gemBar 5 : *integer			#宝石槽
	soulItemId 6 : integer		#魂石
}

#宠物技能信息
.s_SkillData 
{
	skillBar 0 : integer            #技能槽位置
	skillId 1 : integer  			#技能ID
	skillLv 2 : integer				#技能等级
	skillExp 3 : integer
}


# 时装结构信息
.s_Fashion
{
	guid		0 : integer 	#时装guid
	templateId	1 : integer		#表格模板id
	buyTime		2 : integer		#购买时间
	color		3 : integer		#颜色值
	timeLimit	4 : integer		#时效
}

#神器信息
.s_ArtifactData
{
	artifactId 0 : integer		#神器ID
	templateId 1 : integer		#神器表中的模板ID
	starLv	2 : integer			#神器星级
	bindState	3 : integer		#神器绑定状态
	isBroken 4 : integer		#神器是否破损 0 未破损 1 破损
	extraAttrId 5 : *integer    #属性ID集合
	extraAttrVal 6 : *integer   #属性值集合
}

#坐骑装备信息(用于G2C之间传递数据)
.s_MountEquipInfo
{
	mountEquipId 0 : integer					#坐骑装备唯一实例ID
	excelId 1 : integer							#坐骑装备类型ID 对应excel表的坐骑装备表主键
	attrType1 2 : integer 						#可洗练属性1 类型
	attrValue1 3 : float						#值
	attrQuality1 4 : integer					#品质
	attrType2 5 : integer						#可洗练属性2 类型
	attrValue2 6 : float						#值
	attrQuality2 7 : integer					#品质
	attrType3 8 : integer						#可洗练属性3 类型
	attrValue3 9 : float						#值
	attrQuality3 10 : integer					#品质
	bindState 11 : integer						#坐骑装备的绑定状态
	onEquip 12: integer							#坐骑是否装备中
}

#翅膀信息
.s_WingInfo
{
	onWing 0 : integer				#装备的翅膀ID
	advanceLv 1 : integer			#进阶等级
	advancePoints 2 : integer	 	#阶级点数
	attrAdvanceTimes 3 : *integer  	#属性阶级的次数
	attrValue 4 : *integer			#属性值
}

#戒指信息(用于G2C之间传递数据)
.s_RingInfo
{
	ringId 0 : integer								#戒指实例Id
	templateId 1 : integer							#戒指模板ID 对应excel表的主键
}

################################################################################################

#3202服务器通知客户端的数据的公共消息
.G2C_COMMON_UPDATA_INFO
{
	pushMode 0 : integer  				# 0客户端请求的返回 1服务器主动推送
	ingot 1 : integer					#金元宝
	bindIngot 2 : integer				#绑定的金元宝
	silver 3 : integer					#金币
	itemData 5 : *s_ItemData			#道具
	equipData 6 : *s_EquipData			#装备
	getExp  7 : integer					#经验 (记录变化值)
	mntEpData 9 : *s_MountEquipInfo     #坐骑装备
	artifactData 10 : *s_ArtifactData 	#神器信息
	source 11 : integer                 #该项更新来源于哪里，在pushMode为1时（服务器主动推），表示具体的来源
	mountExp 12 : integer				#坐骑经验丹
	prestige 13 : integer				#声望点
	activeValue 14 : integer			#活跃度
	wingInfo 15 : s_WingInfo			#翅膀数据
	honor 16 : integer					#荣耀
	tournamentScore 17 : integer		#比武大会积分
	guildDevote 18 : integer			#帮贡
	fashionData	19	: *s_Fashion		#时装
	ringData 21 : *s_RingInfo			#戒指
	bindSilver	22	:	integer			#绑银
	
	#新结构,还保留G2C_COMMON_UPDATA_INFO这个消息,但是追加结构
	items 23: G2C_SYNC_ITEM_CHANGE		#道具变化,使用新的道具逻辑后itemData字段将不在使用 在item_new.sproto中定义
	obtainEquip 24: *G2C_NOTIFY_OBTAIN_EQUIP # 装备增加变化
	removeEquip 25: EquipRemoveInfo 	# 装备移除变化
	tagRes 26 : *s_TagRes				# Tag资源变化信息
	addFunds 27: integer				# 帮会资金
	isShow 28: boolean					# 是否在客户端做展示
	
}

#3204杀怪掉落物品(对G2C_COMMON_UPDATA_INFO的一层封装)
.G2C_MONSTER_DROP
{
	mstGuid 0 : integer
	commUpdate 1 : G2C_COMMON_UPDATA_INFO
}

# 客户端申请合成物品
.C2G_REQ_COMPOSE{
	id 0 : integer			# 合成表主键
	useUnbind 1 : boolean	# 是否必须使用非绑定 true:必须使用非绑定
	times 2 : integer		# 合成次数,默认是1次(为以后需求扩展预留)
}
.G2C_REQ_COMPOSE{
	result 0 : integer						# 合成结果 0:成功
	commUpdate 1 : G2C_COMMON_UPDATA_INFO	# 本次操作引起的物品变化(此处只用作界面展示,背包操作有通用消息负责)
}

# 通过唯一ID标记的资源信息
.UniqueResInfo
{
	resType 0 : integer 
	uniqueId 1 : integer 
	resValue 2 : integer
}

.G2C_SYNC_TAG_RES{
	tagRes 1 : *s_TagRes
}

################################################################################################


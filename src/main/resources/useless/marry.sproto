#判断是否满足结婚条件
.C2G_CHECK_MARRY_CONDITION
{
	charId 0 : integer
}
#应答
.G2C_CHECK_MARRY_CONDITION
{
	sex 					0 : integer #是否异性 0满足 1不满足
	marryState		1 : integer #是否未婚
	level					2 : integer #等级是否足够
	friendliness	3 : integer #亲密度是否足够
	item					4 : integer #是否有结婚道具
	near					5 : integer #队员是否在队长附近
	camp					6 : integer #是否同阵营
}
#发起求婚
.C2G_SEND_MARRY_REQ
{
	charId 	 0 : integer			#角色ID
}
#通知对方有人向你求婚
.G2C_SEND_MARRY_REQ
{
	charId   0 : integer			#角色ID
	charName 1 : string       #角色名
}
#被求婚人处理结婚请求
.C2G_HANDLE_MARRY_REQ
{
	agree 0 : integer  #0同意 1不同意
	charId   1 : integer			#收到的结婚请求里的角色ID
}
#提示求婚人，对方是否同意了结婚请求
.G2C_HANDLE_MARRY_REQ
{
	charId   0 : integer			#角色ID
	charName 1 : string       #角色名
	agree 	 2 : integer  		#0同意 1不同意
}
#付费离婚，不需要对方确认
.C2G_DIVORCE_PAY
{
}
#请求协议离婚
.C2G_DIVORCE_DEAL
{
}
#对方收到协议离婚的请求，弹出是否同意的对话框
.G2C_DIVORCE_DEAL
{
}
#对方是否同意协议离婚
.C2G_PROCESS_DIVORCE_DEAL
{
	agree 0 : integer  #0同意 1不同意
}
#提示离婚发起人，对方是否同意离婚
.G2C_PROCESS_DIVORCE_DEAL
{
	charId   0 : integer			#角色ID
	charName 1 : string       #角色名
	agree 	 2 : integer  		#0同意 1不同意
}
#登录后、结婚或离婚后给两个人同步结婚状态
.G2C_SEND_MARRY_INFO
{
	state  		0 : integer  #婚姻状态 0已婚 1未婚 
	charId 		1 : integer  #对方id 没有结婚对象是0
	charName 	2 : string   #角色名
	occurTime 3 : integer  #发生时间
}

#打开结婚标签时，获取结婚对象的外观信息
.C2G_GET_MARRY_INFO
{
}
.G2C_GET_MARRY_INFO
{
	charId 			0 : integer			#角色ID
	charName 		1 : string      #角色名
	genderClass 2 : integer     #职业
	occurTime   3 : integer     #登记日期
	#外观信息
	hairId 			4 : integer #头发ID
	faceId 			5 : integer #脸ID
	wingId 			6 : integer #翅膀ID
	weaponId 		7 : integer #武器ID
	armorId  		8 : integer #铠甲ID
	dressId  		9 : integer #衣服ID
	fashionWeaponId 10 : integer #时装头发ID
	fashionFaceId 11 : integer #时装脸ID
}
#结婚对象上线,或者被解除婚约需要在聊天频道有提示
.G2C_MARRY_OPERATE
{
	charName 0 : string   #对方名字
	opType   1 : integer  #0对方上线 1被对方解除婚约 2对方下线
}

